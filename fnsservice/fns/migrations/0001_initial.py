# Generated by Django 2.0.2 on 2018-02-20 12:47

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilterBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Наименование блока для фильрации')),
                ('sortBy', models.IntegerField(verbose_name='Номер для блоков')),
                ('label', models.CharField(max_length=200, verbose_name='Отображаемое наименование блока')),
                ('i_d', models.CharField(max_length=20, verbose_name='Идентификатор для связи метки')),
                ('isFilter', models.BooleanField(default=True, verbose_name='Признак что сам блок является фильром')),
            ],
            options={
                'ordering': ['sortBy'],
            },
        ),
        migrations.CreateModel(
            name='FilterField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Наименование поля для фильрации')),
                ('sortBy', models.IntegerField(verbose_name='Номер для сортировки внутри блока')),
                ('label', models.CharField(max_length=200, verbose_name='Отображаемое наименование')),
                ('i_d', models.CharField(max_length=20, verbose_name='Идентификатор для связи метки')),
                ('asPlaceholder', models.BooleanField(default=True, verbose_name='Выводим подсказку как placeholder')),
                ('type', models.CharField(choices=[('Char', 'Текстовый'), ('Number', 'Числовой'), ('Date', 'Дата'), ('Select', 'Список'), ('MultipleSelect', 'Список с множественным выбором'), ('Bool', 'Выбор Да/Нет')], max_length=20, verbose_name='Тип Фильтра')),
                ('isFilter', models.BooleanField(default=True, verbose_name='Признак фильра')),
                ('options', models.CharField(blank=True, choices=[('OKVER', 'Справочник ОКВЭД'), ('ModeEDU', 'Справочник способов образования'), ('States', 'Справочник состояний'), ('Regions', 'Справочник регинов'), ('Capitals', 'Справочник видов капитала')], max_length=10, null=True, verbose_name='Опции фильтра')),
            ],
            options={
                'ordering': ['sortBy'],
            },
        ),
        migrations.CreateModel(
            name='ModeEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСпОбрЮЛ', models.CharField(blank=True, max_length=2, null=True, verbose_name='Код способа образования по справочнику СЮЛНД')),
                ('НаимСпОбрЮЛ', models.CharField(max_length=255, null=True, verbose_name='Наименование способа образования юридического лица')),
            ],
            options={
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('КодСпОбрЮЛ'), nulls_first=True)],
            },
        ),
        migrations.CreateModel(
            name='OKVED',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодОКВЭД', models.CharField(blank=True, max_length=8, null=True, verbose_name='Код по Общероссийскому классификатору видов экономической деятельности')),
                ('НаимОКВЭД', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование вида деятельности по Общероссийскому классификатору видов экономической деятельности')),
                ('ПрВерсОКВЭД', models.CharField(blank=True, max_length=4, null=True, verbose_name='Код по Общероссийскому классификатору видов экономической деятельности')),
            ],
            options={
                'ordering': ['КодОКВЭД'],
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодРегион', models.CharField(blank=True, max_length=2, null=True, verbose_name='Код субъекта Российской Федерации')),
                ('Регион', models.CharField(max_length=500, verbose_name='Наименование субъекта Российской Федерации')),
            ],
            options={
                'ordering': ['КодРегион'],
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСтатусЮЛ', models.CharField(max_length=3, verbose_name='Код статуса юридического лица по справочнику СЮЛСТ')),
                ('НаимСтатусЮЛ', models.CharField(max_length=500, verbose_name='Наименование статуса юридического лица по справочнику СЮЛСТ')),
            ],
            options={
                'ordering': ['КодСтатусЮЛ'],
            },
        ),
        migrations.CreateModel(
            name='АдрИнЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОКСМ', models.CharField(blank=True, max_length=3, null=True, verbose_name='Код страны')),
                ('НаимСтран', models.CharField(blank=True, max_length=250, null=True, verbose_name='Наименование страны')),
                ('АдрИн', models.CharField(blank=True, max_length=510, null=True, verbose_name='Адрес')),
            ],
        ),
        migrations.CreateModel(
            name='АдрРФЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Индекс', models.CharField(blank=True, max_length=6, null=True, verbose_name='Индекс')),
                ('КодРегион', models.CharField(blank=True, max_length=2, null=True, verbose_name='Код субъекта Российской Федерации')),
                ('КодАдрКладр', models.CharField(blank=True, max_length=23, null=True, verbose_name='Код адреса по КЛАДР')),
                ('Дом', models.CharField(blank=True, max_length=50, null=True, verbose_name='Дом (владение и т.п.)')),
                ('Корпус', models.CharField(blank=True, max_length=50, null=True, verbose_name='Корпус (строение и т.п.)')),
                ('Кварт', models.CharField(blank=True, max_length=50, null=True, verbose_name='Квартира (офис и т.п.)')),
            ],
        ),
        migrations.CreateModel(
            name='ВидЗапТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСПВЗ', models.CharField(max_length=5, null=True, verbose_name='Код вида записи (причины внесения записи в ЕГРЮЛ или ЕГРИП) по справочнику СПВЗ')),
                ('НаимВидЗап', models.CharField(max_length=500, null=True, verbose_name='Наименование вида записи (причины внесения записи в ЕГРЮЛ или ЕГРИП) ')),
            ],
        ),
        migrations.CreateModel(
            name='ВидЗаяв',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСЗОЮЛ', models.CharField(max_length=4, null=True, verbose_name='Код по справочнику СЗОЮЛ')),
                ('НаимСЗОЮЛ', models.CharField(max_length=500, null=True, verbose_name='Наименование по справочнику СЗОЮЛ  ')),
            ],
        ),
        migrations.CreateModel(
            name='ВидНаимУчр',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодУчрРФСубМО', models.CharField(max_length=1, null=True, verbose_name='Код вида учредителя')),
                ('НаимМО', models.CharField(max_length=1000, null=True, verbose_name='Наименование вида должностного лица по справочнику СКФЛЮЛ')),
                ('КодРегион', models.CharField(max_length=2, null=True, verbose_name='Код субъекта Российской Федерации, который является учредителем (участником) юридического лица или на территории которого находится муниципальное образование, которое является учредителем (участником) юридического лица')),
                ('НаимРегион', models.CharField(max_length=100, null=True, verbose_name='Наименование субъекта Российской Федерации')),
            ],
        ),
        migrations.CreateModel(
            name='ГородТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТипГород', models.CharField(max_length=30, null=True, verbose_name='Тип элемента город (город, волость и т.п.)')),
                ('НаимГород', models.CharField(max_length=40, null=True, verbose_name='Наименование (элемент город) ')),
            ],
        ),
        migrations.CreateModel(
            name='ГРНДатаТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ГРН', models.CharField(max_length=13, null=True, verbose_name='Государственный регистрационный номер записи ЕГРЮЛ')),
                ('ДатаЗаписи', models.DateField(blank=True, null=True, verbose_name='ДатаЗаписи')),
            ],
        ),
        migrations.CreateModel(
            name='Документ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AddDate', models.DateField(auto_now=True, verbose_name='Дата добавления записи')),
                ('ИдДок', models.CharField(max_length=36, null=True, verbose_name='Идентификатор документа')),
                ('СвЮЛ_XML', models.TextField(null=True, verbose_name='Сведения о юридическом лице в XML')),
            ],
        ),
        migrations.CreateModel(
            name='ДоляУстКапЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НоминСтоим', models.FloatField(blank=True, null=True, verbose_name='Номинальная стоимость доли в рублях')),
            ],
        ),
        migrations.CreateModel(
            name='ДробьТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Числит', models.CharField(blank=True, max_length=15, null=True, verbose_name='Числит')),
                ('Знаменат', models.CharField(blank=True, max_length=15, null=True, verbose_name='Знаменат')),
            ],
        ),
        migrations.CreateModel(
            name='ИдОтпр',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДолжОтв', models.CharField(blank=True, max_length=100, null=True, verbose_name='Должность ответственного лица')),
                ('Тлф', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер контактного телефона')),
                ('email', models.CharField(blank=True, max_length=45, null=True, verbose_name='E-mail')),
            ],
        ),
        migrations.CreateModel(
            name='ЛицоУпрНасл',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаОткрНасл', models.DateField(blank=True, null=True, verbose_name='Дата открытия наследства (дата смерти участника)')),
            ],
        ),
        migrations.CreateModel(
            name='НаселПунктТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТипНаселПункт', models.CharField(max_length=30, null=True, verbose_name='Тип элемента населенный пункт (поселок, село и т.п.)')),
                ('НаимНаселПункт', models.CharField(max_length=255, null=True, verbose_name='Наименование (элемент населенный пункт)')),
            ],
        ),
        migrations.CreateModel(
            name='ПредИнЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='РазмерДоли',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Процент', models.FloatField(blank=True, null=True, verbose_name='Размер доли в процентах')),
                ('ДробДесят', models.FloatField(blank=True, null=True, verbose_name='Размер доли в десятичных дробях')),
            ],
        ),
        migrations.CreateModel(
            name='РайонТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТипРайон', models.CharField(max_length=30, null=True, verbose_name='Тип элемента район (район, улус и т.п.)')),
                ('НаимРайон', models.CharField(max_length=40, null=True, verbose_name='Наименование (элемент район) ')),
            ],
        ),
        migrations.CreateModel(
            name='РегионТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТипРегион', models.CharField(max_length=30, null=True, verbose_name='Тип элемента регион (республика, край и т.п.)')),
                ('НаимРегион', models.CharField(max_length=40, null=True, verbose_name='Наименование (элемент регион)')),
            ],
        ),
        migrations.CreateModel(
            name='РешСудТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимСуда', models.CharField(max_length=1000, null=True, verbose_name='Наименование суда, которым принято решение')),
                ('Номер', models.CharField(max_length=255, null=True, verbose_name='Номер решения')),
                ('Дата', models.DateField(null=True, verbose_name='Дата решения')),
            ],
        ),
        migrations.CreateModel(
            name='Св_Статус',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСтатусЮЛ', models.CharField(max_length=3, verbose_name='Код статуса юридического лица по справочнику СЮЛСТ')),
                ('НаимСтатусЮЛ', models.CharField(max_length=500, verbose_name='Наименование статуса юридического лица по справочнику СЮЛСТ')),
            ],
        ),
        migrations.CreateModel(
            name='Св_УпрОрг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, null=True, verbose_name='Полное наименование юридического лица на русском языке')),
            ],
        ),
        migrations.CreateModel(
            name='Св_ЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, null=True, verbose_name='Полное наименование юридического лица на русском языке')),
            ],
        ),
        migrations.CreateModel(
            name='СвАдресЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвАдрЭлПочты',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('E_mail', models.CharField(max_length=45, null=True, verbose_name='Адрес электронной почты')),
            ],
        ),
        migrations.CreateModel(
            name='СвДержРеестрАО',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвДискв',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаНачДискв', models.DateField(null=True, verbose_name='Дата начала дисквалификации')),
                ('ДатаОкончДискв', models.DateField(null=True, verbose_name='Дата окончания дисквалификации')),
                ('ДатаРеш', models.DateField(null=True, verbose_name='Дата вынесения судебным органом постановления о дисквалификации ')),
            ],
        ),
        migrations.CreateModel(
            name='СвДовУпрФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвДовУпрЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвДолжн',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРНИП', models.CharField(max_length=15, null=True, verbose_name='Основной государственный регистрационный номер индивидуального предпринимателя - управляющего юридическим лицом')),
                ('ВидДолжн', models.CharField(max_length=2, null=True, verbose_name='Вид должностного лица по справочнику СКФЛЮЛ (указывается код по справочнику)')),
                ('НаимВидДолжн', models.CharField(max_length=1000, null=True, verbose_name='Наименование вида должностного лица по справочнику СКФЛЮЛ')),
                ('НаимДолжн', models.CharField(max_length=1000, null=True, verbose_name='Наименование должности')),
            ],
        ),
        migrations.CreateModel(
            name='СведДолжнФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СведПредДок',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимДок', models.CharField(max_length=255, null=True, verbose_name='Наименование документа')),
                ('НомДок', models.CharField(max_length=255, null=True, verbose_name='Номер документа')),
                ('ДатаДок', models.DateField(null=True, verbose_name='Дата документа')),
            ],
        ),
        migrations.CreateModel(
            name='СведУмУК',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ВелУмУК', models.CharField(blank=True, max_length=20, null=True, verbose_name='Величина, на которую уменьшается уставный капитал (в рублях)')),
                ('ДатаРеш', models.DateField(null=True, verbose_name='Дата принятия решения об уменьшении уставного капитала')),
            ],
        ),
        migrations.CreateModel(
            name='СвЗалогДержФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвЗалогДержЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвЗапЕГРЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ИдЗап', models.CharField(blank=True, max_length=19, null=True, verbose_name='Системный идентификатор записи')),
                ('ГРН', models.CharField(blank=True, max_length=13, null=True, verbose_name='Государственный регистрационный номер записи')),
                ('ДатаЗап', models.DateField(null=True, verbose_name='Дата внесения записи в ЕГРЮЛ')),
            ],
        ),
        migrations.CreateModel(
            name='СвЗаявФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвКФХПредш',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРНИП', models.CharField(blank=True, max_length=15, null=True, verbose_name='ОГРНИП крестьянского (фермерского) хозяйства')),
            ],
        ),
        migrations.CreateModel(
            name='СвКФХПреем',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРНИП', models.CharField(blank=True, max_length=15, null=True, verbose_name='ОГРНИП крестьянского (фермерского) хозяйства')),
            ],
        ),
        migrations.CreateModel(
            name='СвЛицензия',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НомЛиц', models.CharField(blank=True, max_length=100, null=True, verbose_name='Серия и номер лицензии')),
                ('ДатаЛиц', models.DateField(null=True, verbose_name='Дата лицензии')),
                ('ДатаНачЛиц', models.DateField(null=True, verbose_name='Дата начала действия лицензии')),
                ('ДатаОкончЛиц', models.DateField(null=True, verbose_name='Дата окончания действия лицензии')),
                ('НаимЛицВидДеят', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование лицензируемого вида деятельности, на который выдана лицензия')),
                ('МестоДейстЛиц', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Сведения об адресе места осуществления лицензируемого вида деятельности')),
                ('ЛицОргВыдЛиц', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование лицензирующего органа, выдавшего или переоформившего лицензию')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='СвНаимПИФ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('СвНаимПИФ', models.CharField(max_length=1000, null=True, verbose_name='Название (индивидуальное обозначение) паевого инвестиционного фонда')),
            ],
        ),
        migrations.CreateModel(
            name='СвНаимПодраздТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимПолн', models.CharField(max_length=1000, null=True, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='СвНаимЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, null=True, verbose_name='Полное наименование юридического лица на русском языке')),
                ('НаимЮЛСокр', models.CharField(max_length=510, null=True, verbose_name='Сокращенное наименование юридического лица на русском языке')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='СвНедАдресЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ПризнНедАдресЮЛ', models.CharField(choices=[('2', 'признак недостоверности, внесенный в ЕГРЮЛ по результатам проверки достоверности содержащихся в ЕГРЮЛ сведений о юридическом лице (если сведения о недостоверности сведений об адресе внесены на основании записи с кодом СПВЗ 17023)'), ('3', 'признак недостоверности, внесенный в ЕГРЮЛ на основании решения суда (если сведения о недостоверности сведений об адресе внесены на основании записи с кодом СПВЗ 16006)')], max_length=1, null=True, verbose_name='Признак недостоверности адреса ')),
                ('ТекстНедАдресЮЛ', models.CharField(blank=True, max_length=500, null=True, verbose_name='Текст о недостоверности сведений, выводимый в выписке в строке с наименованием «Дополнительные сведения»')),
            ],
        ),
        migrations.CreateModel(
            name='СвНедДанДолжнФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ПризнНедДанДолжнФЛ', models.CharField(max_length=1, null=True, verbose_name='Признак недостоверности данных')),
                ('ТекстНедДанДолжнФЛ', models.CharField(max_length=500, null=True, verbose_name='Текст о недостоверности сведений, выводимый в выписке в строке с наименованием «Дополнительные сведения»')),
            ],
        ),
        migrations.CreateModel(
            name='СвНедДанУпрОрг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ПризнНедДанУпрОрг', models.CharField(blank=True, max_length=1, null=True, verbose_name='Признак недостоверности данных')),
                ('ТекстНедДанУпрОрг', models.CharField(blank=True, max_length=500, null=True, verbose_name='Текст о недостоверности сведений, выводимый в выписке в строке с наименованием «Дополнительные сведения»')),
            ],
        ),
        migrations.CreateModel(
            name='СвНедДанУчрТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ПризнНедДанУчр', models.CharField(blank=True, max_length=1, null=True, verbose_name='Признак недостоверности данных')),
                ('ТекстНедДанУчр', models.CharField(blank=True, max_length=500, null=True, verbose_name='Текст о недостоверности сведений, выводимый в выписке в строке с наименованием «Дополнительные сведения»')),
            ],
        ),
        migrations.CreateModel(
            name='СвНомТелТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НомТел', models.CharField(blank=True, max_length=50, null=True, verbose_name='Контактный телефон')),
            ],
        ),
        migrations.CreateModel(
            name='СвНОТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодНО', models.CharField(max_length=4, verbose_name='Код органа по справочнику СОУН')),
                ('НаимНО', models.CharField(max_length=250, verbose_name='Наименование налогового органа')),
            ],
        ),
        migrations.CreateModel(
            name='СвНотУдДогЗалТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Номер', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер договора залога')),
                ('Дата', models.DateField(blank=True, null=True, verbose_name='Дата договора залога')),
            ],
        ),
        migrations.CreateModel(
            name='СвНПАУтвТУ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимГОУтвТУ', models.CharField(max_length=510, null=True, verbose_name='Наименование государственного органа, утвердившего типовой устав')),
                ('ВидНПА', models.CharField(max_length=100, null=True, verbose_name='Вид нормативного правового акта об утверждении типового устава')),
                ('НаимНПА', models.CharField(max_length=1000, null=True, verbose_name='Наименование нормативного правового акта об утверждении типового устава')),
                ('НомерНПА', models.CharField(max_length=100, null=True, verbose_name='Номер нормативного правового акта об утверждении типового устава')),
                ('ДатаНПА', models.DateField(null=True, verbose_name='Дата нормативного правового акта об утверждении типового устава')),
                ('НомерПрил', models.CharField(max_length=100, null=True, verbose_name='Номер приложения')),
            ],
        ),
        migrations.CreateModel(
            name='СвОбремТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ВидОбрем', models.CharField(blank=True, max_length=16, null=True, verbose_name='Вид обременения')),
                ('СрокОбременения', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Срок обременения или порядок определения срока')),
            ],
        ),
        migrations.CreateModel(
            name='СвОбрЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(max_length=13, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ДатаОГРН', models.DateField(null=True, verbose_name='Дата присвоения ОГРН')),
                ('РегНом', models.CharField(blank=True, max_length=255, null=True, verbose_name='Регистрационный номер, присвоенный российскому юридическому лицу до 1 июля 2002 года, или регистрационный номер юридического лица на территории Республики Крым или территории города федерального значения Севастополя на день принятия в РФ и образования в составе РФ новых субъектов - Республики Крым и города федерального значения Севастополя')),
                ('ДатаРег', models.DateField(blank=True, null=True, verbose_name='Дата регистрации юридического лица')),
                ('НаимРО', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование органа, зарегистрировавшего юридическое лицо')),
            ],
        ),
        migrations.CreateModel(
            name='СвОКВЭД',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвОКВЭДТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодОКВЭД', models.CharField(blank=True, max_length=8, null=True, verbose_name='Код по Общероссийскому классификатору видов экономической деятельности')),
                ('НаимОКВЭД', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование вида деятельности по Общероссийскому классификатору видов экономической деятельности')),
                ('ПрВерсОКВЭД', models.CharField(blank=True, max_length=4, null=True, verbose_name='Код по Общероссийскому классификатору видов экономической деятельности')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='СвОргОсущПр',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвОргПФ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодПФ', models.CharField(max_length=6, verbose_name='Код по справочнику СТОПФ')),
                ('НаимПФ', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='СвОргФСС',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодФСС', models.CharField(max_length=4, verbose_name='Код по справочнику СТОПФ')),
                ('НаимФСС', models.CharField(max_length=255, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='СвПодразд',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвПредстав',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвПредш',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(blank=True, max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(blank=True, max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, verbose_name='Полное наименование юридического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СвПредЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимПредЮЛ', models.CharField(blank=True, max_length=500, null=True, verbose_name='Полное наименование представительства или филиала в Российской Федерации, через которое иностранное ЮЛ осуществляет полномочия управляющей организации')),
            ],
        ),
        migrations.CreateModel(
            name='СвПреем',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(blank=True, max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(blank=True, max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, verbose_name='Полное наименование юридического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СвПрекрЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаПрекрЮЛ', models.DateField(null=True, verbose_name='Дата прекращения юридического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СвПриостЛиц',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаПриостЛиц', models.DateField(null=True, verbose_name='Дата приостановления действия лицензии')),
                ('ЛицОргПриостЛиц', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование лицензирующего органа, приостановившего действие лицензии')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегИнЮЛЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОКСМ', models.CharField(max_length=3, verbose_name='Код страны происхождения')),
                ('НаимСтран', models.CharField(blank=True, max_length=250, null=True, verbose_name='Наименование страны происхождения')),
                ('ДатаРег', models.DateField(null=True, verbose_name='Дата регистрации')),
                ('РегНомер', models.CharField(blank=True, max_length=255, null=True, verbose_name='Регистрационный номер')),
                ('НаимРегОрг', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование регистрирующего органа')),
                ('АдрСтр', models.CharField(blank=True, max_length=510, null=True, verbose_name='Адрес (место нахождения) в стране происхождения')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегОрг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодНО', models.CharField(max_length=4, verbose_name='Код органа по справочнику СОУН')),
                ('НаимНО', models.CharField(max_length=250, verbose_name='Наименование регистрирующего (налогового) органа')),
                ('АдрРО', models.CharField(max_length=128, verbose_name='Адрес регистрирующего органа')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегОргТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодНО', models.CharField(max_length=4, verbose_name='Код органа по справочнику СОУН')),
                ('НаимНО', models.CharField(max_length=250, verbose_name='Наименование регистрирующего (налогового) органа')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегПФ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('РегНомПФ', models.CharField(max_length=15, null=True, verbose_name='Регистрационный номер в территориальном органе Пенсионного фонда Российской Федерации')),
                ('ДатаРег', models.DateField(null=True, verbose_name='Дата регистрации юридического лица в качестве страхователя')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегСтарые',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('РегНом', models.CharField(max_length=255, null=True, verbose_name='Регистрационный номер, присвоенный юридическому лицу до 1 июля 2002 года')),
                ('ДатаРег', models.DateField(null=True, verbose_name='Дата регистрации юридического лица до 1 июля 2002 года')),
                ('НаимРО', models.CharField(max_length=1000, null=True, verbose_name='Наименование органа, зарегистрировавшего юридическое лицо до 1 июля 2002 года')),
            ],
        ),
        migrations.CreateModel(
            name='СвРегФСС',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('РегНомФСС', models.CharField(max_length=15, null=True, verbose_name='Регистрационный номер в исполнительном органе Фонда социального страхования Российской Федерации')),
                ('ДатаРег', models.DateField(null=True, verbose_name='Дата регистрации юридического лица в качестве страхователя')),
            ],
        ),
        migrations.CreateModel(
            name='СвРеорг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвРеоргЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, null=True, verbose_name='Полное наименование юридического лица')),
                ('СостЮЛпосле', models.CharField(max_length=50, null=True, verbose_name='Состояние юридического лица после завершения реорганизации')),
            ],
        ),
        migrations.CreateModel(
            name='СвРешИзмМН',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТекстРешИзмМН', models.CharField(max_length=500, null=True, verbose_name='Текст, выводимый в выписке в строке с наименованием «Дополнительные сведения»')),
            ],
        ),
        migrations.CreateModel(
            name='СвРешИсклЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаРеш', models.DateField(null=True, verbose_name='Дата решения')),
                ('НомерРеш', models.CharField(max_length=255, verbose_name='Номер решения')),
                ('ДатаПубликации', models.DateField(null=True, verbose_name='Дата публикации решения ')),
                ('НомерЖурнала', models.CharField(max_length=50, verbose_name='Номер журнала, в котором опубликовано решение')),
            ],
        ),
        migrations.CreateModel(
            name='СвРождЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ДатаРожд', models.DateField(null=True, verbose_name='Дата рождения')),
                ('МестоРожд', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место рождения')),
                ('ПрДатаРожд', models.CharField(blank=True, max_length=1, null=True, verbose_name='Признак полноты представляемой даты рождения физического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СвСвид',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Серия', models.CharField(max_length=2, null=True, verbose_name='Серия бланка свидетельства')),
                ('Номер', models.CharField(max_length=255, null=True, verbose_name='Номер документа')),
                ('ДатаВыдСвид', models.DateField(null=True, verbose_name='Дата документа')),
            ],
        ),
        migrations.CreateModel(
            name='СвСтатус',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвСтатусЗап',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвТипУстав',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвУпрКомпПИФ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвУпрОрг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвУстКап',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('НаимВидКап', models.CharField(max_length=20, null=True, verbose_name='Наименование вида капитала')),
                ('СумКап', models.FloatField(null=True, verbose_name='Размер в рублях')),
            ],
        ),
        migrations.CreateModel(
            name='СвУчетНО',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('КПП', models.CharField(max_length=9, null=True, verbose_name='КПП юридического лица')),
                ('ДатаПостУч', models.DateField(null=True, verbose_name='Дата постановки на учет в налоговом органе')),
            ],
        ),
        migrations.CreateModel(
            name='СвУчетНОПодраздТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КПП', models.CharField(max_length=9, null=True, verbose_name='КПП юридического лица')),
                ('ДатаПостУч', models.DateField(null=True, verbose_name='Дата постановки на учет в налоговом органе')),
            ],
        ),
        migrations.CreateModel(
            name='СвУчредит',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвФилиал',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвФЛЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Фамилия', models.CharField(blank=True, max_length=60, null=True, verbose_name='Фамилия')),
                ('Имя', models.CharField(blank=True, max_length=60, null=True, verbose_name='Имя')),
                ('Отчество', models.CharField(blank=True, max_length=60, null=True, verbose_name='Отчество')),
                ('ИННФЛ', models.CharField(blank=True, max_length=60, null=True, verbose_name='ИНН ФЛ')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='СвФЛОсущПр',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='СвЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AddDate', models.DateField(auto_now_add=True, verbose_name='Дата добавления записи')),
                ('ДатаВып', models.DateField(null=True, verbose_name='Дата формирования сведений из ЕГРЮЛ в отношении юридического лица')),
                ('ОГРН', models.CharField(max_length=13, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ДатаОГРН', models.DateField(null=True, verbose_name='Дата присвоения ОГРН')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('КПП', models.CharField(max_length=9, null=True, verbose_name='КПП юридического лица')),
                ('СпрОПФ', models.CharField(choices=[('ОКОПФ', 'ОКОПФ'), ('КОПФ', 'КОПФ')], max_length=5, null=True, verbose_name='Наименование классификатора, по которому введены сведения об организационно-правовой форме: ОКОПФ, КОПФ')),
                ('КодОПФ', models.CharField(max_length=5, null=True, verbose_name='Код по выбранному классификатору')),
                ('ПолнНаимОПФ', models.CharField(max_length=255, null=True, verbose_name='Полное наименование организационно-правовой формы')),
                ('КолЗапЕГРЮЛ', models.IntegerField(null=True, verbose_name='Количество записей в ЕГРЮЛ')),
            ],
        ),
        migrations.CreateModel(
            name='СвЮЛЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, null=True, verbose_name='Полное наименование юридического лица на русском языке')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='СвЮЛсложнРеорг',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ОГРН', models.CharField(blank=True, max_length=13, null=True, verbose_name='Основной государственный регистрационный номер юридического лица')),
                ('ИНН', models.CharField(blank=True, max_length=10, null=True, verbose_name='ИНН юридического лица')),
                ('НаимЮЛПолн', models.CharField(max_length=1000, verbose_name='Полное наименование юридического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СпОбрЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСпОбрЮЛ', models.CharField(max_length=2, null=True, verbose_name='Код способа образования по справочнику СЮЛНД')),
                ('НаимСпОбрЮЛ', models.CharField(max_length=255, null=True, verbose_name='Наименование способа образования юридического лица')),
            ],
        ),
        migrations.CreateModel(
            name='СпПрекрЮЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодСпПрекрЮЛ', models.CharField(blank=True, max_length=3, null=True, verbose_name='Код способа прекращения по справочнику СЮЛПД')),
                ('НаимСпПрекрЮЛ', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование способа прекращения')),
            ],
        ),
        migrations.CreateModel(
            name='УдЛичнЕГРЮЛТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('КодВидДок', models.CharField(blank=True, max_length=2, null=True, verbose_name='Код вида документа по справочнику СПДУЛ ')),
                ('НаимДок', models.CharField(blank=True, max_length=150, null=True, verbose_name='Наименование вида документа')),
                ('СерНомДок', models.CharField(blank=True, max_length=50, null=True, verbose_name='Серия и номер документа')),
                ('ДатаДок', models.DateField(null=True, verbose_name='Дата выдачи')),
                ('ВыдДок', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Серия и номер документа')),
                ('КодВыдДок', models.CharField(blank=True, max_length=7, null=True, verbose_name='Код подразделения')),
            ],
        ),
        migrations.CreateModel(
            name='УлицаТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ТипУлица', models.CharField(max_length=30, null=True, verbose_name='Тип адресного объекта улица (улица, проспект, переулок и т.п.)')),
                ('НаимУлица', models.CharField(max_length=255, null=True, verbose_name='ННаименование (элемент улица) ')),
            ],
        ),
        migrations.CreateModel(
            name='УчрПИФ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ГРНДатаПерв', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице')),
                ('ДоляУстКап', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле учредителя (участника)')),
                ('СвНаимПИФ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНаимПИФ', verbose_name='Сведения о названии (индивидуальном обозначении) паевого инвестиционного фонда')),
                ('СвНедДанУчр', models.ManyToManyField(to='fns.СвНедДанУчрТип', verbose_name='Сведения о недостоверности данных об учредителе (участнике) ')),
                ('СвОбрем', models.ManyToManyField(to='fns.СвОбремТип', verbose_name='Сведения об обременении доли участника')),
                ('СвУпрКомпПИФ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУпрКомпПИФ', verbose_name='Сведения об управляющей компании паевого инвестиционного фонда')),
            ],
        ),
        migrations.CreateModel(
            name='УчрРФСубМО',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ВидНаимУчр', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ВидНаимУчр', verbose_name='Сведения о виде учредителя (участника) и (при необходимости) наименовании муниципального образования и региона')),
                ('ГРНДатаПерв', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице')),
                ('ДоляУстКап', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле учредителя (участника)')),
                ('СвНедДанУчр', models.ManyToManyField(to='fns.СвНедДанУчрТип', verbose_name='Сведения о недостоверности данных об учредителе (участнике) ')),
                ('СвОб', models.ManyToManyField(to='fns.СвОбремТип', verbose_name='Сведения об обременении доли участника')),
                ('СвОргОсущПр', models.ManyToManyField(to='fns.СвОргОсущПр', verbose_name='Сведения об органе государственной власти, органе местного самоуправления или о юридическом лице, осуществляющем права учредителя (участника)')),
                ('СвФЛОсущПр', models.ManyToManyField(to='fns.СвФЛОсущПр', verbose_name='Сведения о физическом лице, осуществляющем права учредителя (участника)')),
            ],
        ),
        migrations.CreateModel(
            name='УчрФЛ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('АдрМЖИн', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации')),
                ('АдресМЖРФ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации')),
                ('ГРНДатаПерв', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице')),
                ('ДоляУстКап', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле учредителя (участника)')),
                ('ЛицоУпрНасл', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ЛицоУпрНасл', verbose_name='Сведения о лице, осуществляющем управление долей, переходящей в порядке наследования')),
                ('СвДовУпрФЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвДовУпрФЛ', verbose_name='Сведения о доверительном управляющем - ФЛ')),
                ('СвДовУпрЮЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвДовУпрЮЛ', verbose_name='Сведения о доверительном управляющем - ЮЛ ')),
                ('СвНедДанУчр', models.ManyToManyField(to='fns.СвНедДанУчрТип', verbose_name='Сведения о недостоверности данных об учредителе (участнике) ')),
                ('СвОбрем', models.ManyToManyField(to='fns.СвОбремТип', verbose_name='Сведения об обременении доли участника')),
                ('СвРождФЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ')),
                ('СвФЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ')),
                ('УдЛичнФЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность')),
            ],
        ),
        migrations.CreateModel(
            name='УчрЮЛИн',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ГРНДатаПерв', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице')),
                ('ДоляУстКап', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле учредителя (участника)')),
                ('НаимИННЮЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Сведения о наименовании и (при наличии) ОГРН и ИНН ЮЛ')),
                ('СвНедДанУчр', models.ManyToManyField(to='fns.СвНедДанУчрТип', verbose_name='Сведения о недостоверности данных об учредителе (участнике) ')),
                ('СвОбрем', models.ManyToManyField(to='fns.СвОбремТип', verbose_name='Сведения об обременении доли участника')),
                ('СвРегИн', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегИнЮЛЕГРЮЛТип', verbose_name='Сведения о регистрации учредителя (участника) до 01.07.2002 г')),
            ],
        ),
        migrations.CreateModel(
            name='УчрЮЛРос',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ГРНДатаПерв', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице')),
                ('ДоляУстКап', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле учредителя (участника)')),
                ('НаимИННЮЛ', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Сведения о наименовании и (при наличии) ОГРН и ИНН ЮЛ')),
                ('СвНУчр', models.ManyToManyField(to='fns.СвНедДанУчрТип', verbose_name='Сведения о недостоверности данных об учредителе (участнике) ')),
                ('СвОбрем', models.ManyToManyField(to='fns.СвОбремТип', verbose_name='Сведения об обременении доли участника')),
                ('СвРегСтарые', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегСтарые', verbose_name='Сведения о регистрации учредителя (участника) до 01.07.2002 г')),
            ],
        ),
        migrations.CreateModel(
            name='Файл',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ИдФайл', models.CharField(max_length=100, null=True, verbose_name='Файл')),
                ('ВерсФорм', models.CharField(max_length=5, null=True, verbose_name='Версия формата')),
                ('ТипИнф', models.CharField(choices=[('ЕГРЮЛ_ОТКР_СВЕД', 'при передаче информации с открытыми сведениями (отсутствуют сведения о документах, удостоверяющих личность, и адресах физических лиц)'), ('ЕГРЮЛ_ЗАКР_СВЕД', 'при передаче информации с закрытыми сведениями (присутствуют сведения о документах, удостоверяющих личность, и адресах физических лиц)')], max_length=50, null=True, verbose_name='Тип информации')),
                ('ВерсПрог', models.CharField(blank=True, max_length=100, null=True, verbose_name='Версия передающей программы')),
                ('КолДок', models.IntegerField(null=True, verbose_name='Количество документов')),
                ('ИдОтпр', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ИдОтпр', verbose_name='Сведения об отправителе')),
            ],
        ),
        migrations.CreateModel(
            name='ФИОТип',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Фамилия', models.CharField(blank=True, max_length=60, null=True, verbose_name='Фамилия')),
                ('Имя', models.CharField(blank=True, max_length=60, null=True, verbose_name='Имя')),
                ('Отчество', models.CharField(blank=True, max_length=60, null=True, verbose_name='Отчество')),
            ],
        ),
        migrations.AddIndex(
            model_name='улицатип',
            index=models.Index(fields=['ТипУлица', 'НаимУлица'], name='fns_улицати_ТипУлиц_e3cb57_idx'),
        ),
        migrations.AddField(
            model_name='удличнегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='УдЛичнЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='удличнегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свюлегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвЮЛЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свюлегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвАдрЭлПочты',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвАдрЭлПочты', verbose_name='Сведения об адресе электронной почты юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвАдресЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвАдресЮЛ', verbose_name='Сведения об адресе (месте нахождения)'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвДержРеестрАО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвДержРеестрАО', verbose_name='Сведения о держателе реестра акционеров акционерного общества'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвЗапЕГРЮЛ',
            field=models.ManyToManyField(to='fns.СвЗапЕГРЮЛ', verbose_name='Сведения о правопреемнике'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвКФХПредш',
            field=models.ManyToManyField(to='fns.СвКФХПредш', verbose_name='Сведения о крестьянском (фермерском) хозяйстве, на базе имущества которого создано юридическое лицо'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвКФХПреем',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвКФХПреем', verbose_name='Сведения о крестьянском (фермерском) хозяйстве, которые внесены в ЕГРИП в связи с приведением правового статуса крестьянского (фермерского) хозяйства в соответствие с нормами части первой Гражданского кодекса Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвЛицензия',
            field=models.ManyToManyField(to='fns.СвЛицензия', verbose_name='Сведения о лицензиях, выданных ЮЛ'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвНаимЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНаимЮЛ', verbose_name='Сведения о наименовании юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвОКВЭД',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвОКВЭД', verbose_name='Сведения о видах экономической деятельности по Общероссийскому классификатору видов экономической деятельности'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвОбрЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвОбрЮЛ', verbose_name='Сведения о регистрации (образовании) юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвПодразд',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвПодразд', verbose_name='Сведения об обособленных подразделениях юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвПредш',
            field=models.ManyToManyField(to='fns.СвПредш', verbose_name='Сведения о правопредшественнике'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвПреем',
            field=models.ManyToManyField(to='fns.СвПреем', verbose_name='Сведения о правопреемнике'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвПрекрЮЛ',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвПрекрЮЛ', verbose_name='Сведения о прекращении юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвРегОрг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегОрг', verbose_name='Сведения о регистрирующем органе по месту нахождения юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвРегПФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегПФ', verbose_name='Сведения о регистрации юридического лица в качестве страхователя в территориальном органе Пенсионного фонда Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвРегФСС',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегФСС', verbose_name='Сведения о регистрации юридического лица в качестве страхователя в исполнительном органе Фонда социального страхования Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвРеорг',
            field=models.ManyToManyField(to='fns.СвРеорг', verbose_name='Сведения об участии в реорганизации'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвСвДоляООО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДоляУстКапЕГРЮЛТип', verbose_name='Сведения о доле в уставном капитале общества с ограниченной ответственностью, принадлежащей обществу'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвСтатус',
            field=models.ManyToManyField(to='fns.СвСтатус', verbose_name='Сведения о состоянии (статусе) юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвТипУстав',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвТипУстав', verbose_name='Сведения об использовании юридическим лицом типового устава'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвУпрОрг',
            field=models.ManyToManyField(to='fns.СвУпрОрг', verbose_name='Сведения об учете в налоговом органе'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвУстКап',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУстКап', verbose_name='Сведения о размере указанного в учредительных документах коммерческой организации уставного капитала (складочного капитала, уставного фонда, паевого фонда)'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвУчетНО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУчетНО', verbose_name='Сведения об учете в налоговом органе'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СвУчредит',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУчредит', verbose_name='Сведения об учредителях (участниках) юридического лица'),
        ),
        migrations.AddField(
            model_name='свюл',
            name='СведДолжнФЛ',
            field=models.ManyToManyField(to='fns.СведДолжнФЛ', verbose_name='Сведения о лице, имеющем право без доверенности действовать от имени юридического лица '),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='свфлосущпр',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='свфлегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвФЛЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свфлегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свфл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='свфл',
            name='СвФИОИНН',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвФЛСвФИОИНН', to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='свфл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='свфилиал',
            name='АдрМНИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Адрес (место расположения) за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфилиал',
            name='АдрМНРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Адрес (место расположения) на территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свфилиал',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном филиале'),
        ),
        migrations.AddField(
            model_name='свфилиал',
            name='СвНаим',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНаимПодраздТип', verbose_name='Наименование и (при наличии) ОГРН и ИНН держателе реестра акционеров акционерного общества'),
        ),
        migrations.AddField(
            model_name='свфилиал',
            name='СвУчетНОФилиал',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУчетНОПодраздТип', verbose_name='Сведения об учете в налоговом органе по месту нахождения филиала'),
        ),
        migrations.AddField(
            model_name='свучредит',
            name='УчрПИФ',
            field=models.ManyToManyField(to='fns.УчрПИФ', verbose_name='Сведения о паевом инвестиционном фонде, в состав имущества которого включена доля в уставном капитале '),
        ),
        migrations.AddField(
            model_name='свучредит',
            name='УчрРФСМО',
            field=models.ManyToManyField(to='fns.УчрРФСубМО', verbose_name='Сведения об учредителе (участнике) - Российской Федерации, субъекте Российской Федерации, муниципальном образовании'),
        ),
        migrations.AddField(
            model_name='свучредит',
            name='УчрФЛ',
            field=models.ManyToManyField(to='fns.УчрФЛ', verbose_name='Сведения об учредителе (участнике) - физическом лице'),
        ),
        migrations.AddField(
            model_name='свучредит',
            name='УчрЮЛИн',
            field=models.ManyToManyField(to='fns.УчрЮЛИн', verbose_name='Сведения об учредителе (участнике) - иностранном юридическом лице'),
        ),
        migrations.AddField(
            model_name='свучредит',
            name='УчрЮЛРос',
            field=models.ManyToManyField(to='fns.УчрЮЛРос', verbose_name='Сведения об учредителе (участнике) - российском юридическом лице'),
        ),
        migrations.AddField(
            model_name='свучетноподраздтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвУчетНОПодраздТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свучетноподраздтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свучетноподраздтип',
            name='СвНО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНОТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свучетно',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвУчетНО_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свучетно',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свучетно',
            name='СвНО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНОТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свусткап',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвУстКап_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свусткап',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свусткап',
            name='ДоляРубля',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДробьТип', verbose_name='Доля рубля в капитале'),
        ),
        migrations.AddField(
            model_name='свусткап',
            name='СведУмУК',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СведУмУК', verbose_name='Сведения о нахождении хозяйственного общества в процессе уменьшения уставного капитала'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='НаимИННЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='ПредИнЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ПредИнЮЛ', verbose_name='Сведения об адресе управляющей организации в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='СвАдрРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе управляющей организации в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='СвНедДанУпрОрг',
            field=models.ManyToManyField(to='fns.СвНедДанУпрОрг', verbose_name='Сведения о недостоверности данных об управляющей организации'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='СвНомТел',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНомТелТип', verbose_name='Сведения о контактном телефоне'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='СвПредЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвПредЮЛ', verbose_name='Сведения о наименовании представительства или филиала в Российской Федерации, через которое иностранное ЮЛ осуществляет полномочия управляющей организации'),
        ),
        migrations.AddField(
            model_name='свупрорг',
            name='СвРегИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегИнЮЛЕГРЮЛТип', verbose_name='Сведения о регистрации в стране происхождения'),
        ),
        migrations.AddField(
            model_name='свупркомппиф',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свупркомппиф',
            name='УпрКомпПиф',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Наименование и (при наличии) ОГРН и ИНН управляющей компании паевого инвестиционного фонда'),
        ),
        migrations.AddField(
            model_name='свтипустав',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвТипУстав_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свтипустав',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свтипустав',
            name='СвНПАУтвТУ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНПАУтвТУ', verbose_name='Сведения о нормативном правовом акте об утверждении типового устава '),
        ),
        migrations.AddField(
            model_name='свстатусзап',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата записи, которой внесены исправления в связи с технической ошибкой'),
        ),
        migrations.AddField(
            model_name='свстатусзап',
            name='ГРНДатаНед',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвСтатусЗап_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения записи, которой запись признана недействительной'),
        ),
        migrations.AddField(
            model_name='свстатус',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвСтатус_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свстатус',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свстатус',
            name='Св_Статус',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.Св_Статус', verbose_name='Сведения о правоспособности (статусе) юридического лица'),
        ),
        migrations.AddField(
            model_name='свстатус',
            name='СвРешИсклЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРешИсклЮЛ', verbose_name='Сведения о решении о предстоящем исключении недействующего ЮЛ из ЕГРЮЛ и его публикации '),
        ),
        migrations.AddField(
            model_name='свсвид',
            name='ГРНДатаСвидНед',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата записи, которая признана недействительной'),
        ),
        migrations.AddField(
            model_name='сврождегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРождЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврождегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРешИзмМН_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='Город',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГородТип', verbose_name='Город (волость и т.п.)'),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='НаселПункт',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.НаселПунктТип', verbose_name='Населенный пункт (село и т.п.)'),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='Район',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РайонТип', verbose_name='Район (улус и т.п.)'),
        ),
        migrations.AddField(
            model_name='сврешизммн',
            name='Регион',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РегионТип', verbose_name='Субъект Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свреоргюл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРеоргЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свреорг',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРеорг_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей сведения о начале реорганизации'),
        ),
        migrations.AddField(
            model_name='свреорг',
            name='ГРНДатаИзмСост',
            field=models.ManyToManyField(to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения записи, которой в ЕГРЮЛ внесены сведения об изменении состава участвующих в реорганизации юридических лиц '),
        ),
        migrations.AddField(
            model_name='свреорг',
            name='СвРеоргЮЛ',
            field=models.ManyToManyField(to='fns.СвРеоргЮЛ', verbose_name='Сведения о юридических лицах, участвующих в реорганизации'),
        ),
        migrations.AddField(
            model_name='свреорг',
            name='СвСтатус',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.Св_Статус', verbose_name='Сведения о форме реорганизации (статусе) юридического лица'),
        ),
        migrations.AddField(
            model_name='сврегфсс',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРегФСС_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврегфсс',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сврегфсс',
            name='СвОргФСС',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвОргФСС', verbose_name='Сведения об исполнительном органе Фонда социального страхования Российской Федерации'),
        ),
        migrations.AddField(
            model_name='сврегстарые',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРегСтарые_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврегстарые',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сврегпф',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРегПФ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврегпф',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сврегпф',
            name='СвОргПФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвОргПФ', verbose_name='Сведения о территориальном органе Пенсионного фонда Российской Федерации'),
        ),
        migrations.AddField(
            model_name='сврегорг',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРегОрг_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврегинюлегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвРегИн_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сврегинюлегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свприостлиц',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвПриостЛиц_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свприостлиц',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свпрекрюл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвПрекрЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свпрекрюл',
            name='СвРегОрг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегОргТип', verbose_name='Сведения о регистрирующем (налоговом) органе, внесшем запись о прекращении юридического лица'),
        ),
        migrations.AddField(
            model_name='свпрекрюл',
            name='СпПрекрЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СпПрекрЮЛ', verbose_name='Способ прекращения юридического лица'),
        ),
        migrations.AddField(
            model_name='свпреем',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвПреем_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свпреем',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свпреем',
            name='СвЮЛсложнРеорг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛсложнРеорг', verbose_name='Сведения о ЮЛ, путем реорганизации которого был создан правопредшественник при реорганизации в форме выделения или разделения с одновременным присоединением или слиянием'),
        ),
        migrations.AddField(
            model_name='свпредюл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвПредЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свпредюл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свпредш',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвПредш_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свпредш',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свпредш',
            name='СвЮЛсложнРеорг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛсложнРеорг', verbose_name='Сведения о ЮЛ, путем реорганизации которого был создан правопредшественник при реорганизации в форме выделения или разделения с одновременным присоединением или слиянием'),
        ),
        migrations.AddField(
            model_name='свпредстав',
            name='АдрМНИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Адрес (место расположения) за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свпредстав',
            name='АдрМНРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Адрес (место расположения) на территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свпредстав',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном филиале'),
        ),
        migrations.AddField(
            model_name='свпредстав',
            name='СвНаим',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНаимПодраздТип', verbose_name='Наименование и (при наличии) ОГРН и ИНН держателе реестра акционеров акционерного общества'),
        ),
        migrations.AddField(
            model_name='свпредстав',
            name='СвУчетНОПредстав',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвУчетНОПодраздТип', verbose_name='Сведения об учете в налоговом органе по месту нахождения филиала'),
        ),
        migrations.AddField(
            model_name='свподразд',
            name='СвПр',
            field=models.ManyToManyField(to='fns.СвПредстав', verbose_name='Сведения о представительствах юридического лица'),
        ),
        migrations.AddField(
            model_name='свподразд',
            name='СвФилиал',
            field=models.ManyToManyField(to='fns.СвФилиал', verbose_name='Сведения о филиалах юридического лица'),
        ),
        migrations.AddField(
            model_name='своргосущпр',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='своргосущпр',
            name='НаимИННЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о наименовании и (при наличии) ОГРН и ИНН органа государственной власти, органа местного самоуправления или ЮЛ'),
        ),
        migrations.AddField(
            model_name='своквэдтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвОКВЭДТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='своквэдтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='своквэд',
            name='СвОКВЭДДоп',
            field=models.ManyToManyField(to='fns.СвОКВЭДТип', verbose_name='Сведения о дополнительном виде деятельности'),
        ),
        migrations.AddField(
            model_name='своквэд',
            name='СвОКВЭДОсн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвОКВЭДТип_First', to='fns.СвОКВЭДТип', verbose_name='Сведения об основном виде деятельности'),
        ),
        migrations.AddField(
            model_name='свобрюл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвОбрЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свобрюл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свобрюл',
            name='СпОбрЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СпОбрЮЛ', verbose_name='Способ образования юридического лица '),
        ),
        migrations.AddField(
            model_name='свобремтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвОбремТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свобремтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свобремтип',
            name='РешСуд',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РешСудТип', verbose_name='Сведения о решении судебного органа, по которому на долю учредителя (участника) наложено обременение'),
        ),
        migrations.AddField(
            model_name='свобремтип',
            name='СвЗалогДержФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЗалогДержФЛ', verbose_name='Сведения о залогодержателе - ФЛ'),
        ),
        migrations.AddField(
            model_name='свобремтип',
            name='СвЗалогДержЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЗалогДержЮЛ', verbose_name='Сведения о залогодержателе - ФЛ'),
        ),
        migrations.AddField(
            model_name='свнотуддогзалтип',
            name='СвНотариус',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='ФИО и (при наличии) ИНН нотариуса, удостоверившего договор залога'),
        ),
        migrations.AddField(
            model_name='свномтелтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНомТелТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свномтелтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнедданучртип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНедДанУчрТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнедданучртип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнедданучртип',
            name='РешСудНедДанУчр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РешСудТип', verbose_name='Сведения о решении суда, на основании которого указанные сведения признаны недостоверными'),
        ),
        migrations.AddField(
            model_name='свнедданупрорг',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНедДанУпрОрг_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнедданупрорг',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнедданупрорг',
            name='РешСудНедДанУпрОрг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РешСудТип', verbose_name='Сведения о решении суда, на основании которого указанные сведения признаны недостоверными'),
        ),
        migrations.AddField(
            model_name='свнеддандолжнфл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНедДанДолжнФЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнеддандолжнфл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнеддандолжнфл',
            name='РешСудНедДанДолжнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РешСудТип', verbose_name='Сведения о решении суда, на основании которого указанные сведения признаны недостоверными'),
        ),
        migrations.AddField(
            model_name='свнедадресюл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНедАдресЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнедадресюл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнедадресюл',
            name='РешСудНедАдр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РешСудТип', verbose_name='Сведения о решении суда, на основании которого адрес признан недостоверным'),
        ),
        migrations.AddField(
            model_name='свнаимюл',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНаимЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнаимюл',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнаимподраздтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНаимПодраздТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнаимподраздтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свнаимпиф',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНаимПИФ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свнаимпиф',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свлицензия',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвЛицензия_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свлицензия',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свлицензия',
            name='СвПриостЛиц',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвПриостЛиц', verbose_name='Сведения о приостановлении действия лицензии'),
        ),
        migrations.AddField(
            model_name='свкфхпреем',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН главы КФХ'),
        ),
        migrations.AddField(
            model_name='свкфхпредш',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН главы КФХ'),
        ),
        migrations.AddField(
            model_name='свзаявфл',
            name='ВидЗаяв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ВидЗаяв', verbose_name='Заявитель'),
        ),
        migrations.AddField(
            model_name='свзаявфл',
            name='СвУпрОрг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.Св_УпрОрг', verbose_name='Сведения об управляющей компании'),
        ),
        migrations.AddField(
            model_name='свзаявфл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛ', verbose_name='ССведения о ФЛ - заявителе'),
        ),
        migrations.AddField(
            model_name='свзаявфл',
            name='СвЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.Св_ЮЛ', verbose_name='Сведения о юридическом лице, от имени которого действует заявитель'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='ВидЗап',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ВидЗапТип', verbose_name='Сведения о причине внесения записи в ЕГРЮЛ'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='ГРНДатаИспрПред',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвЗапЕГРЮЛ_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата записи, в которую внесены исправления'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='ГРНДатаНедПред',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата записи, которая признана недействительной'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='СвЗФЛ',
            field=models.ManyToManyField(to='fns.СвЗаявФЛ', verbose_name='Сведения о заявителе'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='СвРегОрг',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегОргТип', verbose_name='Сведения о регистрирующем (налоговом) органе, внесшем запись в ЕГРЮЛ'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='СвСвид',
            field=models.ManyToManyField(to='fns.СвСвид', verbose_name='Сведения о свидетельстве, подтверждающем факт внесения записи в ЕГРЮЛ'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='СвСтатусЗап',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвСтатусЗап', verbose_name='Сведения о статусе записи'),
        ),
        migrations.AddField(
            model_name='свзапегрюл',
            name='СведПредДок',
            field=models.ManyToManyField(to='fns.СведПредДок', verbose_name='Сведения о документах, представленных при внесении записи в ЕГРЮЛ'),
        ),
        migrations.AddField(
            model_name='свзалогдержюл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свзалогдержюл',
            name='НаимИННЮЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Сведения о наименовании и (при наличии) ОГРН и ИНН ЮЛ'),
        ),
        migrations.AddField(
            model_name='свзалогдержюл',
            name='СвНотУдДогЗал',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНотУдДогЗалТип', verbose_name='Сведения о нотариальном удостоверении договора залога'),
        ),
        migrations.AddField(
            model_name='свзалогдержюл',
            name='СвРегИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРегИнЮЛЕГРЮЛТип', verbose_name='Сведения о регистрации в стране происхождения'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='СвНотУдДогЗал',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНотУдДогЗалТип', verbose_name='Сведения о нотариальном удостоверении договора залога'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='свзалогдержфл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='сведумук',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СведУмУК_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='сведумук',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвДискв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвДискв', verbose_name='Сведения о дисквалификации'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвДолжн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвДолжн', verbose_name='Сведения о должности ФЛ'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвН',
            field=models.ManyToManyField(to='fns.СвНедДанДолжнФЛ', verbose_name='Сведения о недостоверности данных о лице, имеющем право без доверенности действовать от имени юридического лица'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвНомТел',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНомТелТип', verbose_name='Сведения о контактном телефоне ФЛ'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='сведдолжнфл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='свдолжн',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвДолжн_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свдолжн',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свдовупрюл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свдовупрюл',
            name='НаимИННДовУпр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Сведения о наименовании и (при наличии) ОГРН и ИНН ЮЛ'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='свдовупрфл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='свдискв',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвДискв_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свдискв',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свдержреестрао',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свдержреестрао',
            name='ДержРеестрАО',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛЕГРЮЛТип', verbose_name='Наименование и (при наличии) ОГРН и ИНН держателе реестра акционеров акционерного общества'),
        ),
        migrations.AddField(
            model_name='свадрэлпочты',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвАдрЭлПочты_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='свадрэлпочты',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='свадресюл',
            name='АдресРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Адрес (место нахождения) юридического лица'),
        ),
        migrations.AddField(
            model_name='свадресюл',
            name='СвНедАдресЮЛ',
            field=models.ManyToManyField(to='fns.СвНедАдресЮЛ', verbose_name='Сведения о недостоверности адреса'),
        ),
        migrations.AddField(
            model_name='свадресюл',
            name='СвРешИзмМН',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРешИзмМН', verbose_name='Сведения о принятии юридическим лицом решения об изменении места нахождения'),
        ),
        migrations.AddIndex(
            model_name='регионтип',
            index=models.Index(fields=['ТипРегион', 'НаимРегион'], name='fns_регионт_ТипРеги_58e64a_idx'),
        ),
        migrations.AddIndex(
            model_name='районтип',
            index=models.Index(fields=['ТипРайон', 'НаимРайон'], name='fns_районти_ТипРайо_0dfee5_idx'),
        ),
        migrations.AddField(
            model_name='размердоли',
            name='ДробПрост',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ДробьТип', verbose_name='Размер доли в простых дробях'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='СвНомТел_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='СвНомТел',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвНомТелТип', verbose_name='Сведения о контактном телефоне ФЛ'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='прединюл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddIndex(
            model_name='населпункттип',
            index=models.Index(fields=['ТипНаселПункт', 'НаимНаселПункт'], name='fns_населпу_ТипНасе_db51d8_idx'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='АдрМЖИн',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрИнЕГРЮЛТип', verbose_name='Сведения об адресе места жительства за пределами территории Российской Федерации'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='АдресМЖРФ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.АдрРФЕГРЮЛТип', verbose_name='Сведения об адресе места жительства в Российской Федерации'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='ГРНДатаПерв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ сведений о данном лице'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='СвРождФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвРождЕГРЮЛТип', verbose_name='Сведения о рождении ФЛ'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='СвФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвФЛЕГРЮЛТип', verbose_name='Сведения о ФИО и (при наличии) ИНН ФЛ'),
        ),
        migrations.AddField(
            model_name='лицоупрнасл',
            name='УдЛичнФЛ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УдЛичнЕГРЮЛТип', verbose_name='Сведения о документе, удостоверяющем личность'),
        ),
        migrations.AddField(
            model_name='идотпр',
            name='ФИООтв',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ФИОТип', verbose_name='Сведения об отправителе'),
        ),
        migrations.AddField(
            model_name='доляусткапегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ДоляУстКапЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='доляусткапегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='доляусткапегрюлтип',
            name='РазмерДоли',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РазмерДоли', verbose_name='Размер доли (в процентах или в виде дроби - десятичной или простой) '),
        ),
        migrations.AddField(
            model_name='документ',
            name='СвЮЛ',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.СвЮЛ', verbose_name='Сведения о юридическом лице'),
        ),
        migrations.AddField(
            model_name='документ',
            name='Файл',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.Файл', verbose_name='Файл с данными'),
        ),
        migrations.AddIndex(
            model_name='городтип',
            index=models.Index(fields=['ТипГород', 'НаимГород'], name='fns_городти_ТипГоро_22e878_idx'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='АдрРФЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='Город',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГородТип', verbose_name='Город (волость и т.п.)'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='НаселПункт',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.НаселПунктТип', verbose_name='Населенный пункт (село и т.п.)'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='Район',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РайонТип', verbose_name='Район (улус и т.п.)'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='Регион',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.РегионТип', verbose_name='Субъект Российской Федерации'),
        ),
        migrations.AddField(
            model_name='адррфегрюлтип',
            name='Улица',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.УлицаТип', verbose_name='Улица (проспект, переулок и т.п.)'),
        ),
        migrations.AddField(
            model_name='адринегрюлтип',
            name='ГРНДата',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='АдрИнЕГРЮЛТип_Дата', to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи, содержащей указанные сведения'),
        ),
        migrations.AddField(
            model_name='адринегрюлтип',
            name='ГРНДатаИспр',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fns.ГРНДатаТип', verbose_name='ГРН и дата внесения в ЕГРЮЛ записи об исправлении технической ошибки в указанных сведениях '),
        ),
        migrations.AddField(
            model_name='filterblock',
            name='fields',
            field=models.ManyToManyField(to='fns.FilterField', verbose_name='Поля для фильтрации'),
        ),
        migrations.AddIndex(
            model_name='свюлегрюлтип',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fns_свюлегр_search__05c5e6_gin'),
        ),
        migrations.AddIndex(
            model_name='свюлегрюлтип',
            index=models.Index(fields=['НаимЮЛПолн', 'ОГРН', 'ИНН'], name='fns_свюлегр_НаимЮЛП_ee0994_idx'),
        ),
        migrations.AddIndex(
            model_name='свюл',
            index=models.Index(fields=['ИНН', 'КПП', 'ОГРН', 'ДатаВып', 'ДатаОГРН'], name='fns_свюл_ИНН_1e83bf_idx'),
        ),
        migrations.AddIndex(
            model_name='свфлегрюлтип',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fns_свфлегр_search__eafc9a_gin'),
        ),
        migrations.AddIndex(
            model_name='свфлегрюлтип',
            index=models.Index(fields=['ИННФЛ', 'Фамилия', 'Имя', 'Отчество'], name='fns_свфлегр_ИННФЛ_5805ab_idx'),
        ),
        migrations.AddIndex(
            model_name='свусткап',
            index=models.Index(fields=['НаимВидКап', 'СумКап'], name='fns_свустка_НаимВид_4aeb88_idx'),
        ),
        migrations.AddIndex(
            model_name='своквэдтип',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fns_своквэд_search__3ed1b8_gin'),
        ),
        migrations.AddIndex(
            model_name='своквэдтип',
            index=models.Index(fields=['КодОКВЭД', 'ПрВерсОКВЭД'], name='fns_своквэд_КодОКВЭ_7f3237_idx'),
        ),
        migrations.AddIndex(
            model_name='свнаимюл',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fns_свнаимю_search__4bf78f_gin'),
        ),
        migrations.AddIndex(
            model_name='свнаимюл',
            index=models.Index(fields=['НаимЮЛПолн', 'НаимЮЛСокр'], name='fns_свнаимю_НаимЮЛП_e47cde_idx'),
        ),
        migrations.AddIndex(
            model_name='свлицензия',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='fns_свлицен_search__2ee198_gin'),
        ),
        migrations.AddIndex(
            model_name='свлицензия',
            index=models.Index(fields=['НомЛиц'], name='fns_свлицен_НомЛиц_007a73_idx'),
        ),
        migrations.AddIndex(
            model_name='свзапегрюл',
            index=models.Index(fields=['ГРН', 'ДатаЗап'], name='fns_свзапег_ГРН_9ae139_idx'),
        ),
        migrations.AddIndex(
            model_name='адррфегрюлтип',
            index=models.Index(fields=['Индекс', 'КодРегион', 'КодАдрКладр'], name='fns_адррфег_Индекс_00254b_idx'),
        ),
    ]
